#!/bin/bash

# ===============================================
# 脚本名称：gen_site.sh
# 作用：自动化博客文章的音频生成、摘要生成和站点部署流程
# 使用方法：
#   在 Git Bash 中执行 ./gen_site.sh
#   -s 参数：生成后执行 hexo server
#   -d 参数：生成后执行 hexo deploy
# ===============================================

# 设置脚本在遇到错误时立即退出
# 这能确保如果任何一步失败，整个流程会停止
set -e

# 初始化参数变量
SERVER_FLAG=false
DEPLOY_FLAG=false

# 解析命令行参数
while getopts "sd" opt; do
  case $opt in
    s)
      SERVER_FLAG=true
      ;;
    d)
      DEPLOY_FLAG=true
      ;;
    \?)
      echo "无效参数: -$OPTARG" >&2
      exit 1
      ;;
  esac
done
shift $((OPTIND-1))

# ===============================================
# 步骤 1/4：生成文章音频
# ===============================================
echo "正在执行步骤 1/4：生成文章音频..."
# 使用 'python' 命令调用 gen_audio.py 脚本
python "$(dirname "$0")/gen_audio.py"
echo "步骤 1/4 已完成：音频文件生成完毕。"
# 发出提示音，通常是终端的响铃声
tput bel
echo "---------------------------------------"

# ===============================================
# 步骤 2/4：生成文章摘要
# ===============================================
echo "正在执行步骤 2/4：生成文章摘要..."
# 使用 'python' 命令调用 gen_abstract.py 脚本
python "$(dirname "$0")/gen_tag.py"
python "$(dirname "$0")/gen_abstract.py"
echo "步骤 2/4 已完成：摘要文件生成完毕。"
echo "---------------------------------------"

# ===============================================
# 步骤 3/4：清理 Hexo 缓存
# ===============================================
echo "正在执行步骤 3/4：清理 Hexo 缓存..."
# 执行 Hexo 的 clean 命令
hexo clean
echo "步骤 3/4 已完成：Hexo 缓存已清理。"
echo "---------------------------------------"

# ===============================================
# 步骤 4/4：生成静态站点
# ===============================================
echo "正在执行步骤 4/4：生成静态站点文件..."
# 执行 Hexo 的 generate 命令
hexo generate
echo "步骤 4/4 已完成：站点文件已生成。"
# 发出提示音
tput bel
echo "---------------------------------------"

# ===============================================
# 步骤 5：根据参数执行后续操作
# ===============================================
if [ "$SERVER_FLAG" = true ]; then
  echo "根据 -s 参数，正在启动本地服务器..."
  hexo server
elif [ "$DEPLOY_FLAG" = true ]; then
  echo "根据 -d 参数，正在部署站点..."
  hexo deploy
else
  echo "所有基本任务已成功完成！"
  echo "你可以使用 'hexo s' 来预览，或使用 'hexo d' 进行部署。"
fi
